{"version":3,"sources":["styles/global.js","components/Header/styles.js","components/Header/index.js","components/Board/styles.js","components/List/styles.js","components/Card/styles.js","components/Board/context.js","components/Card/index.js","components/List/index.js","components/Board/index.js","services/api.js","App.js","index.js"],"names":["createGlobalStyle","Container","styled","div","Header","props","done","isDragging","css","Label","span","color","createContext","Card","data","index","listIndex","ref","useRef","move","useContext","BoardContext","useDrag","item","type","collect","monitor","dragRef","useDrop","accept","hover","draggedListIndex","targetListIndex","draggedIndex","targetIndex","targetSize","current","getBoundingClientRect","targetCenter","bottom","top","draggedTop","getClientOffset","y","dropRef","labels","map","label","key","content","user","src","alt","List","title","creatable","size","cards","card","id","Board","useState","lists","setLists","Provider","value","fromList","toList","from","to","produce","draft","dragged","splice","list","App","DndProvider","backend","HTML5Backend","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ec4c5928.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components'\r\n\r\nexport default createGlobalStyle`\r\n  @import url('https://fonts.googleapis.com/css?family=Roboto:400,500&display=swap');\r\n\r\n  * {\r\n    margin: 0;\r\n    padding: 0;\r\n    outline: 0;\r\n    box-sizing: border-box;\r\n  }\r\n\r\n  html, body, #root {\r\n    height: 100%;\r\n  }\r\n\r\n  body {\r\n    font: 14px 'Roboto', sans-serif;\r\n    background: #ecf1f8;\r\n    color: #333;\r\n    -webkit-font-smoothing: antialiased !important;\r\n  }\r\n\r\n  ul {\r\n    list-style: none;\r\n  }\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  height: 80px;\r\n  padding: 0 30px;\r\n  background: #ac0dac;\r\n  color: #fff;\r\n\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n","import React from 'react';\r\n\r\nimport { Container } from './styles';\r\n\r\nfunction Header() {\r\n  return (\r\n    <Container>\r\n      <h1>Pipefy Clone</h1>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Header;","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  padding: 30px 0;\r\n  height: calc(100% - 80px);\r\n`;","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  padding: 0 15px;\r\n  height: 100%;\r\n  flex: 0 0 320px;\r\n  opacity: ${props => props.done ? 0.6 : 1};\r\n  & + div {\r\n    border-left: 1px solid rgba(0, 0, 0, 0.05);\r\n  }\r\n  header {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    height: 42px;\r\n    h2 {\r\n      font-weight: 500;\r\n      font-size: 16px;\r\n      padding: 0 10px;\r\n    }\r\n    button {\r\n      width: 42px;\r\n      height: 42px;\r\n      border-radius: 18px;\r\n      background: #3b5bfd;\r\n      border: 0;\r\n      cursor: pointer;\r\n    }\r\n  }\r\n  ul {\r\n    margin-top: 30px;\r\n  }\r\n`;","import styled, { css } from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  position: relative;\r\n  background: #FFF;\r\n  border-radius: 5px;\r\n  margin-bottom: 10px;\r\n  padding: 15px;\r\n  box-shadow: 0 1px 4px 0 rgba(192, 208, 230, 0.8);\r\n  border-top: 20px solid rgba(230, 236, 245, 0.4);\r\n  cursor: grab;\r\n  header {\r\n    position: absolute;\r\n    top: -22px;\r\n    left: 15px;\r\n  }\r\n  p {\r\n    font-weight: 500;\r\n    line-height: 20px;\r\n  }\r\n  img {\r\n    width: 24px;\r\n    height: 24px;\r\n    border-radius: 2px;\r\n    margin-top: 5px;\r\n  }\r\n  ${props => props.isDragging && css`\r\n    border: 2px dashed rgba(0, 0, 0, 0.2);\r\n    padding-top: 31px;\r\n    border-radius: 0;\r\n    background: transparent;\r\n    box-shadow: none;\r\n    cursor: grabbing;\r\n    p, img, header {\r\n      opacity: 0;\r\n    }\r\n  `}\r\n`;\r\n\r\nexport const Label = styled.span`\r\n  width: 10px;\r\n  height: 10px;\r\n  border-radius: 2px;\r\n  display: inline-block;\r\n  background: ${props => props.color};\r\n`;","import { createContext } from 'react';\r\n\r\nexport default createContext({});\r\n","import React, { useRef, useContext } from 'react';\r\nimport { useDrag, useDrop } from 'react-dnd'\r\n\r\nimport { Container, Label } from './styles';\r\n\r\nimport BoardContext from '../Board/context';\r\n\r\nfunction Card({ data, index, listIndex }) {\r\n  const ref = useRef();\r\n  const { move } = useContext(BoardContext);\r\n\r\n  const [{ isDragging }, dragRef] = useDrag({\r\n    item: { type: 'CARD', index, listIndex },\r\n    collect: monitor => ({\r\n      isDragging: monitor.isDragging(),\r\n    }),\r\n  });\r\n\r\n  const [, dropRef] = useDrop({\r\n    accept: 'CARD',\r\n    hover(item, monitor) {\r\n      const draggedListIndex = item.listIndex;\r\n      const targetListIndex = listIndex;\r\n\r\n      const draggedIndex = item.index;\r\n      const targetIndex = index;\r\n\r\n      if (draggedIndex === targetIndex && draggedListIndex === targetListIndex) {\r\n        return;\r\n      }\r\n\r\n      const targetSize = ref.current.getBoundingClientRect();\r\n      const targetCenter = (targetSize.bottom - targetSize.top) / 2;\r\n\r\n      const draggedOffset = monitor.getClientOffset();\r\n      const draggedTop = draggedOffset.y - targetSize.top;\r\n\r\n      if (draggedIndex < targetIndex && draggedTop < targetCenter) {\r\n        return;\r\n      }\r\n\r\n      if (draggedIndex > targetIndex && draggedTop > targetCenter) {\r\n        return;\r\n      }\r\n\r\n      move(draggedListIndex, targetListIndex, draggedIndex, targetIndex);\r\n\r\n      item.index = targetIndex;\r\n      item.listIndex = targetListIndex;\r\n    }\r\n  })\r\n\r\n  dragRef(dropRef(ref));\r\n\r\n  return (\r\n    <Container ref={ref} isDragging={isDragging}>\r\n      <header>\r\n        {data.labels.map(label => <Label key={label} color={label} />)}\r\n      </header>\r\n      <p>{data.content}</p>\r\n      { data.user && <img src={data.user} alt=\"\"/> }\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\n\r\nimport { MdAdd } from 'react-icons/md';\r\nimport { Container } from './styles';\r\n\r\nimport Card from '../Card';\r\n\r\nfunction List({ data, index: listIndex }) {\r\n  return (\r\n    <Container done={data.done}>\r\n      <header>\r\n        <h2>{data.title}</h2>\r\n        {data.creatable && (\r\n          <button type=\"button\">\r\n            <MdAdd size={24} color=\"#FFF\" />\r\n          </button>\r\n        )}\r\n      </header>\r\n\r\n      <ul>\r\n        { data.cards.map((card, index) => (\r\n          <Card \r\n            key={card.id} \r\n            listIndex={listIndex}\r\n            index={index} \r\n            data={card}\r\n          />\r\n        )) }\r\n      </ul>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default List;","import React, { useState } from 'react';\r\nimport { loadLists }from '../../services/api';\r\nimport produce from 'immer';\r\n\r\nimport { Container } from './styles';\r\nimport List from '../List';\r\n\r\nimport BoardContext from './context';\r\n\r\nconst data = loadLists();\r\n\r\nfunction Board() {\r\n  const move = (fromList, toList, from, to) => {\r\n    setLists(produce(lists, draft => {\r\n      const dragged = draft[fromList].cards[from];\r\n\r\n      draft[fromList].cards.splice(from, 1);\r\n      draft[toList].cards.splice(to, 0, dragged);\r\n    }))\r\n  };\r\n\r\n  const [lists, setLists] = useState(data);\r\n  \r\n  return (\r\n    <BoardContext.Provider value={{ lists, move }}>\r\n      <Container>\r\n        {lists.map((list, index) => <List key={list.title} index={index} data={list} />)}\r\n      </Container>\r\n    </BoardContext.Provider>\r\n  );\r\n}\r\n\r\nexport default Board;","export function loadLists() {\r\n  return [\r\n    { \r\n      title: 'ToDo', \r\n      creatable: true,\r\n      cards: [\r\n        {\r\n          id: 1,\r\n          content: 'Study React',\r\n          labels: ['#7159c1'],\r\n          user: 'https://api.adorable.io/avatars/285/user1.png'\r\n        },\r\n        {\r\n          id: 2,\r\n          content: 'Write new post on blog',\r\n          labels: ['#7159c1'],\r\n          user: 'https://api.adorable.io/avatars/285/user2.png'\r\n        },\r\n        {\r\n          id: 3,\r\n          content: 'Save money',\r\n          labels: ['#54e1f7'],\r\n          user: 'https://api.adorable.io/avatars/285/user3.png'\r\n        },\r\n        {\r\n          id: 4,\r\n          content: 'Call my parents',\r\n          labels: ['#54e1f7'],\r\n          user: 'https://api.adorable.io/avatars/285/user1.png'\r\n        },\r\n        {\r\n          id: 5,\r\n          content: 'Buy gift for girlfriend',\r\n          labels: ['#54e1f7'],\r\n          user: 'https://api.adorable.io/avatars/285/user1.png'\r\n        },\r\n      ]\r\n    },\r\n    { \r\n      title: 'Doing', \r\n      creatable: false,\r\n      cards: [\r\n        {\r\n          id: 6,\r\n          content: 'Clone Pipefy UI',\r\n          labels: [],\r\n          user: 'https://api.adorable.io/avatars/285/user5.png'\r\n        }\r\n      ]\r\n    },\r\n    { \r\n      title: 'On Hold', \r\n      creatable: false,\r\n      cards: [\r\n        {\r\n          id: 7,\r\n          content: 'Play the guitar',\r\n          labels: ['#7159c1'],\r\n          user: 'https://api.adorable.io/avatars/285/user2.png'\r\n        },\r\n        {\r\n          id: 8,\r\n          content: 'Go to gym',\r\n          labels: ['#54e1f7'],\r\n          user: 'https://api.adorable.io/avatars/285/user8.png'\r\n        },\r\n        {\r\n          id: 9,\r\n          content: 'Fix RaspberryPi',\r\n          labels: [],\r\n        }\r\n      ]\r\n    },\r\n    { \r\n      title: 'Done', \r\n      creatable: false,\r\n      done: true,\r\n      cards: [\r\n        {\r\n          id: 10,\r\n          content: 'Cook healthy food',\r\n          labels: ['#54e1f7'],\r\n        },\r\n        {\r\n          id: 12,\r\n          content: 'Use the stairs',\r\n          labels: ['#54e1f7'],\r\n        }\r\n      ]\r\n    },\r\n  ];\r\n}","import React from 'react';\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\n\nimport GlobalStyle from './styles/global';\n\nimport Header from './components/Header';\nimport Board from './components/Board';\n\nfunction App() {\n  return (\n    <DndProvider backend={HTML5Backend}>\n      <Header />\n      <Board />\n      \n      <GlobalStyle />\n    </DndProvider>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}